;test file
(define 
    (fib i)
    (if (< i 2)
        i
        (+ 
            (fib (- i 1))
            (fib (- i 2))
)))

(define 
    (sum lst)
    (if (null? lst)
        0 
        (+ 
            (car lst)
            (sum (cdr lst)))))

(define 
    (range start end)
    (if (> start end)
        (list)
        (cons 
            start
            (range (+ start 1) end))))

(define (times i) (range 0 i))

(define 
    (map f lst)
    ((if (null? lst)
        (list) 
        (cons 
            (f (car lst))
            (map f (cdr lst))))))

(define 
    (fibList i)
    (map fib (times i))
)

(define 
    (** n ex)
    (if (<= ex 0)
        1
        (* n (** n (- ex 1)))
    )
)

(display (** 2 10))
(newline)

(display (fibList 10))
(newline)

(display (sum (list 1 2 3 4 5)))
(newline)

(display (+ 3.14 2.22) )
(newline)

(display (/ 3.22 2) )
(newline)

(display #\f)